{
  "_generic": {
    "defaultPackage": "typenum",
    "location": "",
    "packages": {
      "typenum": "1.15.0"
    },
    "sourcesAggregatedHash": null,
    "subsystem": "rust"
  },
  "_subsystem": {
    "gitSources": [],
    "meta": {
      "typenum": {
        "1.15.0": {
          "description": "Typenum is a Rust library for type-level numbers evaluated at\n    compile time. It currently supports bits, unsigned integers, and signed\n    integers. It also provides a type-level array of type-level numbers, but its\n    implementation is incomplete.", "license": [   "mit",   "asl20"
          ]
        }
      }
    },
    "relPathReplacements": {
      "typenum": {
        "1.15.0": {}
      }
    }
  },
  "cyclicDependencies": {},
  "dependencies": {
    "derive_more": {
      "0.99.17": [
        [ "proc-macro2", "1.0.47" ],
        [ "quote", "1.0.21" ],
        [ "syn", "1.0.103" ]
      ]
    },
    "impl-trait-for-tuples": {
      "0.2.2": [
        [ "proc-macro2", "1.0.47" ],
        [ "quote", "1.0.21" ],
        [ "syn", "1.0.103" ]
      ]
    },
    "parity-scale-codec": {
      "2.3.1": [
        [ "arrayvec", "0.7.2" ],
        [ "byte-slice-cast", "1.2.2" ],
        [ "impl-trait-for-tuples", "0.2.2" ],
        [ "parity-scale-codec-derive", "2.3.1" ]
      ]
    },
    "parity-scale-codec-derive": {
      "2.3.1": [
        [ "proc-macro-crate", "1.2.1" ],
        [ "proc-macro2", "1.0.47" ],
        [ "quote", "1.0.21" ],
        [ "syn", "1.0.103" ]
      ]
    },
    "proc-macro-crate": {
      "1.2.1": [
        [ "once_cell", "1.16.0" ],
        [ "thiserror", "1.0.37" ],
        [ "toml", "0.5.9" ]
      ]
    },
    "proc-macro2": {
      "1.0.47": [
        [ "unicode-ident", "1.0.5" ]
      ]
    },
    "quote": {
      "1.0.21": [
        [ "proc-macro2", "1.0.47" ]
      ]
    },
    "scale-info": {
      "1.0.0": [
        [ "cfg-if", "1.0.0" ],
        [ "derive_more", "0.99.17" ],
        [ "parity-scale-codec", "2.3.1" ],
        [ "scale-info-derive", "1.0.0" ]
      ]
    },
    "scale-info-derive": {
      "1.0.0": [
        [ "proc-macro-crate", "1.2.1" ],
        [ "proc-macro2", "1.0.47" ],
        [ "quote", "1.0.21" ],
        [ "syn", "1.0.103" ]
      ]
    },
    "syn": {
      "1.0.103": [
        [ "proc-macro2", "1.0.47" ],
        [ "quote", "1.0.21" ],
        [ "unicode-ident", "1.0.5" ]
      ]
    },
    "thiserror": {
      "1.0.37": [
        [ "thiserror-impl", "1.0.37" ]
      ]
    },
    "thiserror-impl": {
      "1.0.37": [
        [ "proc-macro2", "1.0.47" ],
        [ "quote", "1.0.21" ],
        [ "syn", "1.0.103" ]
      ]
    },
    "toml": {
      "0.5.9": [
        [ "serde", "1.0.147" ]
      ]
    },
    "typenum": {
      "1.15.0": [
        [ "scale-info", "1.0.0" ]
      ]
    }
  },
  "sources": {
    "arrayvec": {
      "0.7.2": {
        "hash": "8da52d66c7071e2e3fa2a1e5c6d088fec47b593032b254f5e980de8ea54454d6",
        "type": "crates-io"
      }
    },
    "byte-slice-cast": {
      "1.2.2": {
        "hash": "c3ac9f8b63eca6fd385229b3675f6cc0dc5c8a5c8a54a59d4f52ffd670d87b0c",
        "type": "crates-io"
      }
    },
    "cfg-if": {
      "1.0.0": {
        "hash": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
        "type": "crates-io"
      }
    },
    "derive_more": {
      "0.99.17": {
        "hash": "4fb810d30a7c1953f91334de7244731fc3f3c10d7fe163338a35b9f640960321",
        "type": "crates-io"
      }
    },
    "impl-trait-for-tuples": {
      "0.2.2": {
        "hash": "11d7a9f6330b71fea57921c9b61c47ee6e84f72d394754eff6163ae67e7395eb",
        "type": "crates-io"
      }
    },
    "once_cell": {
      "1.16.0": {
        "hash": "86f0b0d4bf799edbc74508c1e8bf170ff5f41238e5f8225603ca7caaae2b7860",
        "type": "crates-io"
      }
    },
    "parity-scale-codec": {
      "2.3.1": {
        "hash": "373b1a4c1338d9cd3d1fa53b3a11bdab5ab6bd80a20f7f7becd76953ae2be909",
        "type": "crates-io"
      }
    },
    "parity-scale-codec-derive": {
      "2.3.1": {
        "hash": "1557010476e0595c9b568d16dcfb81b93cdeb157612726f5170d31aa707bed27",
        "type": "crates-io"
      }
    },
    "proc-macro-crate": {
      "1.2.1": {
        "hash": "eda0fc3b0fb7c975631757e14d9049da17374063edb6ebbcbc54d880d4fe94e9",
        "type": "crates-io"
      }
    },
    "proc-macro2": {
      "1.0.47": {
        "hash": "5ea3d908b0e36316caf9e9e2c4625cdde190a7e6f440d794667ed17a1855e725",
        "type": "crates-io"
      }
    },
    "quote": {
      "1.0.21": {
        "hash": "bbe448f377a7d6961e30f5955f9b8d106c3f5e449d493ee1b125c1d43c2b5179",
        "type": "crates-io"
      }
    },
    "scale-info": {
      "1.0.0": {
        "hash": "5c55b744399c25532d63a0d2789b109df8d46fc93752d46b0782991a931a782f",
        "type": "crates-io"
      }
    },
    "scale-info-derive": {
      "1.0.0": {
        "hash": "baeb2780690380592f86205aa4ee49815feb2acad8c2f59e6dd207148c3f1fcd",
        "type": "crates-io"
      }
    },
    "serde": {
      "1.0.147": {
        "hash": "d193d69bae983fc11a79df82342761dfbf28a99fc8d203dca4c3c1b590948965",
        "type": "crates-io"
      }
    },
    "syn": {
      "1.0.103": {
        "hash": "a864042229133ada95abf3b54fdc62ef5ccabe9515b64717bcb9a1919e59445d",
        "type": "crates-io"
      }
    },
    "thiserror": {
      "1.0.37": {
        "hash": "10deb33631e3c9018b9baf9dcbbc4f737320d2b576bac10f6aefa048fa407e3e",
        "type": "crates-io"
      }
    },
    "thiserror-impl": {
      "1.0.37": {
        "hash": "982d17546b47146b28f7c22e3d08465f6b8903d0ea13c1660d9d84a6e7adcdbb",
        "type": "crates-io"
      }
    },
    "toml": {
      "0.5.9": {
        "hash": "8d82e1a7758622a465f8cee077614c73484dac5b836c02ff6a40d5d1010324d7",
        "type": "crates-io"
      }
    },
    "typenum": {
      "1.15.0": {
        "hash": "dcf81ac59edc17cc8697ff311e8f5ef2d99fcbd9817b34cec66f90b6c3dfd987",
        "type": "crates-io"
      }
    },
    "unicode-ident": {
      "1.0.5": {
        "hash": "6ceab39d59e4c9499d4e5a8ee0e2735b891bb7308ac83dfb4e80cad195c9f6f3",
        "type": "crates-io"
      }
    }
  }
}
