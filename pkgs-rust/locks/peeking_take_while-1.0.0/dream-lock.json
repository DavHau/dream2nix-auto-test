{
  "_generic": {
    "defaultPackage": "peeking_take_while",
    "location": "",
    "packages": {
      "peeking_take_while": "1.0.0"
    },
    "sourcesAggregatedHash": null,
    "subsystem": "rust"
  },
  "_subsystem": {
    "gitSources": [],
    "meta": {
      "peeking_take_while": {
        "1.0.0": {
          "description": "Like `Iterator::take_while`, but calls the predicate on a peeked value. This allows you to use `Iterator::by_ref` and `Iterator::take_while` together, and still get the first value for which the `take_while` predicate returned false after dropping the `by_ref`.", "license": [   "mit",   "asl20"
          ]
        }
      }
    },
    "relPathReplacements": {
      "peeking_take_while": {
        "1.0.0": {}
      }
    }
  },
  "cyclicDependencies": {},
  "dependencies": {},
  "sources": {
    "peeking_take_while": {
      "1.0.0": {
        "hash": "9e9ed2178b0575fff8e1b83b58ba6f75e727aafac2e1b6c795169ad3b17eb518",
        "type": "crates-io"
      }
    }
  }
}
